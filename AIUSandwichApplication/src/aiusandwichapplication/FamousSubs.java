/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aiusandwichapplication;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.PrintWriter;
import static java.util.Collections.list;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;

/**
 *
 * @author ericb
 */
public class FamousSubs extends javax.swing.JFrame { //extends the Jframe to make the GUI

    Vector<Order> orders = new Vector<>();
    Customer cust; 
    /**
     * Creates new form FamousSubs
     */
    public FamousSubs() {
        initComponents();
        finalPanel.setVisible(false);//made these not visibile to stop them popping up when you clicked on an empty space.
        orderPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        customerPanel = new javax.swing.JPanel();
        cityField = new javax.swing.JTextField();
        stateField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        zipField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        enterButton = new javax.swing.JButton();
        addressField = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        addressFieldLabel = new javax.swing.JLabel();
        cityFieldLabel = new javax.swing.JLabel();
        stateFieldLabel = new javax.swing.JLabel();
        zipFieldLabel = new javax.swing.JLabel();
        nameError = new javax.swing.JLabel();
        addressError = new javax.swing.JLabel();
        cityError = new javax.swing.JLabel();
        stateError = new javax.swing.JLabel();
        zipError = new javax.swing.JLabel();
        phoneField = new javax.swing.JTextField();
        phoneFieldLabel = new javax.swing.JLabel();
        phoneError = new javax.swing.JLabel();
        orderPanel = new javax.swing.JPanel();
        greetingLabel = new javax.swing.JLabel();
        plsSelectLabel = new javax.swing.JLabel();
        beverageLabel = new javax.swing.JLabel();
        beverageBox = new javax.swing.JComboBox();
        breadBox = new javax.swing.JComboBox();
        breadLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        typeBox = new javax.swing.JComboBox();
        sizeLabel = new javax.swing.JLabel();
        sizeBox = new javax.swing.JComboBox();
        orderDetailsScroll = new javax.swing.JScrollPane();
        orderDetails = new javax.swing.JTextArea();
        cancelButton = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();
        placeOrderButton = new javax.swing.JButton();
        greetingLabel2 = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();
        greetingLabel3 = new javax.swing.JLabel();
        finalPanel = new javax.swing.JPanel();
        thankyouLabel = new javax.swing.JLabel();
        finalScrollPane = new javax.swing.JScrollPane();
        finalTextArea = new javax.swing.JTextArea();
        returnButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityFieldActionPerformed(evt);
            }
        });

        stateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateFieldActionPerformed(evt);
            }
        });

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        zipField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zipFieldActionPerformed(evt);
            }
        });

        nameLabel.setText("Please enter your name.");

        enterButton.setText("Enter");
        enterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enterButtonMouseClicked(evt);
            }
        });
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        addressField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressFieldActionPerformed(evt);
            }
        });

        addressLabel.setText("Please enter your delivery address.");

        addressFieldLabel.setText("Address");

        cityFieldLabel.setText("City");

        stateFieldLabel.setText("State");

        zipFieldLabel.setText("ZIP");

        nameError.setForeground(new java.awt.Color(255, 0, 0));

        addressError.setForeground(new java.awt.Color(255, 0, 0));

        cityError.setForeground(new java.awt.Color(255, 0, 0));

        stateError.setForeground(new java.awt.Color(255, 0, 0));

        zipError.setForeground(new java.awt.Color(255, 0, 0));

        phoneFieldLabel.setText("Please Enter your Phone Number.");

        phoneError.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout customerPanelLayout = new javax.swing.GroupLayout(customerPanel);
        customerPanel.setLayout(customerPanelLayout);
        customerPanelLayout.setHorizontalGroup(
            customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(customerPanelLayout.createSequentialGroup()
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameError))
                            .addComponent(addressLabel)
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addressError))
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cityError))
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addComponent(stateField, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stateError)))
                        .addContainerGap(312, Short.MAX_VALUE))
                    .addGroup(customerPanelLayout.createSequentialGroup()
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enterButton)
                            .addComponent(addressFieldLabel)
                            .addComponent(cityFieldLabel)
                            .addComponent(stateFieldLabel)
                            .addComponent(zipFieldLabel)
                            .addComponent(phoneFieldLabel)
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addComponent(zipField, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(zipError))
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(phoneError)))
                        .addGap(0, 278, Short.MAX_VALUE))))
        );
        customerPanelLayout.setVerticalGroup(
            customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerPanelLayout.createSequentialGroup()
                .addComponent(nameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameError))
                .addGap(18, 18, 18)
                .addComponent(addressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addressFieldLabel)
                .addGap(2, 2, 2)
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressError))
                .addGap(4, 4, 4)
                .addComponent(cityFieldLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityError))
                .addGap(2, 2, 2)
                .addComponent(stateFieldLabel)
                .addGap(2, 2, 2)
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateError))
                .addGap(4, 4, 4)
                .addComponent(zipFieldLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zipField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(phoneFieldLabel)
                .addGap(7, 7, 7)
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enterButton)
                .addGap(0, 27, Short.MAX_VALUE))
        );

        orderPanel.setOpaque(false);

        greetingLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        greetingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        plsSelectLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        plsSelectLabel.setText("Please select from the following choices.");

        beverageLabel.setText("Beverage");

        beverageBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Tea", "Coke", "Pepsi", "Water" }));

        breadBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Italian", "Flatbread", "Wheat", "Multigrain" }));

        breadLabel.setText("Bread");

        typeLabel.setText("Type");

        typeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Beef", "Chicken", "Vegetarian", "Fish" }));

        sizeLabel.setText("Size");

        sizeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Small", "Medium", "Large", "Extra_Large" }));

        orderDetails.setEditable(false);
        orderDetails.setColumns(20);
        orderDetails.setRows(5);
        orderDetailsScroll.setViewportView(orderDetails);

        cancelButton.setText("Cancel");
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonMouseClicked(evt);
            }
        });
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        submitButton.setText("Submit");
        submitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitButtonMouseClicked(evt);
            }
        });
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        placeOrderButton.setText("Place Order");
        placeOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeOrderButtonActionPerformed(evt);
            }
        });

        greetingLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        greetingLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        greetingLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout orderPanelLayout = new javax.swing.GroupLayout(orderPanel);
        orderPanel.setLayout(orderPanelLayout);
        orderPanelLayout.setHorizontalGroup(
            orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(cancelButton)
                .addGap(54, 54, 54)
                .addComponent(submitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(placeOrderButton)
                .addGap(54, 54, 54))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderPanelLayout.createSequentialGroup()
                .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(greetingLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(greetingLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, orderPanelLayout.createSequentialGroup()
                        .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(plsSelectLabel)
                            .addComponent(beverageLabel)
                            .addComponent(beverageBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(breadLabel)
                            .addComponent(typeLabel)
                            .addComponent(sizeLabel)
                            .addComponent(breadBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(typeBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sizeBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(orderDetailsScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE))
                    .addComponent(greetingLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        orderPanelLayout.setVerticalGroup(
            orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderPanelLayout.createSequentialGroup()
                .addComponent(greetingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(greetingLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(greetingLabel3)
                .addGap(12, 12, 12)
                .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderPanelLayout.createSequentialGroup()
                        .addComponent(plsSelectLabel)
                        .addGap(18, 18, 18)
                        .addComponent(beverageLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(beverageBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(breadLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(breadBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(typeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(typeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sizeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sizeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clearButton)
                            .addComponent(placeOrderButton)
                            .addComponent(cancelButton)
                            .addComponent(submitButton)))
                    .addGroup(orderPanelLayout.createSequentialGroup()
                        .addComponent(orderDetailsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        finalPanel.setOpaque(false);
        finalPanel.setPreferredSize(new java.awt.Dimension(558, 342));

        thankyouLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        thankyouLabel.setText("Thankyou!!!");

        finalTextArea.setColumns(20);
        finalTextArea.setRows(5);
        finalTextArea.setWrapStyleWord(true);
        finalScrollPane.setViewportView(finalTextArea);

        returnButton.setText("Return");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        quitButton.setText("Quit");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout finalPanelLayout = new javax.swing.GroupLayout(finalPanel);
        finalPanel.setLayout(finalPanelLayout);
        finalPanelLayout.setHorizontalGroup(
            finalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finalPanelLayout.createSequentialGroup()
                .addGroup(finalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(finalPanelLayout.createSequentialGroup()
                        .addGroup(finalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(finalPanelLayout.createSequentialGroup()
                                .addGap(191, 191, 191)
                                .addComponent(thankyouLabel))
                            .addGroup(finalPanelLayout.createSequentialGroup()
                                .addGap(171, 171, 171)
                                .addComponent(returnButton)
                                .addGap(113, 113, 113)
                                .addComponent(quitButton)))
                        .addGap(0, 166, Short.MAX_VALUE))
                    .addGroup(finalPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(finalScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)))
                .addContainerGap())
        );
        finalPanelLayout.setVerticalGroup(
            finalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(thankyouLabel)
                .addGap(18, 18, 18)
                .addComponent(finalScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(finalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quitButton)
                    .addComponent(returnButton))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(orderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(customerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(finalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(orderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(customerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(finalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE))
        );
        jLayeredPane1.setLayer(customerPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(orderPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(finalPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void addressFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressFieldActionPerformed

    private void cityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityFieldActionPerformed

    private void stateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stateFieldActionPerformed

    private void zipFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zipFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zipFieldActionPerformed

    private void enterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonMouseClicked
        
    }//GEN-LAST:event_enterButtonMouseClicked

    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked

    }//GEN-LAST:event_cancelButtonMouseClicked

    private void submitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButtonMouseClicked

    }//GEN-LAST:event_submitButtonMouseClicked

    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed
        //Makes the following fields = to the text in the fields when the button is activated
        
        String name = nameField.getText();
        String address = addressField.getText();
        String city = cityField.getText();
        String state = stateField.getText();
        String zip = zipField.getText();
        String phone = phoneField.getText();
        
        //phone number pattern. Matches 1234567890, 123-456-7890, (123)456-7890, and (123)4567890
        String phonePattern = "\\d{10}|(?:\\d{3}-){2}\\d{4}|\\(\\d{3}\\)\\d{3}-?\\d{4}";
        
        cust = new Customer(name, address, city, state, zip, phone);
        //cust is a new customer with name, address, city, state, and zip
        
        //Setting all error mesages to nothing before checking for empty fields.
        nameError.setText("");
        addressError.setText("");
        cityError.setText("");
        stateError.setText("");
        zipError.setText("");
        phoneError.setText("");
        
        //Error handling for finding out if the text fields are empty.
        if ( nameField.getText().trim().length() == 0 ){
            nameError.setText("Please Enter your name.");
        }
        else if ( addressField.getText().trim().length() == 0 ){
            addressError.setText("Please Enter your address.");
        }
        else if ( cityField.getText().trim().length() == 0 ){
            cityError.setText("Please Enter your city.");
        }
        else if ( stateField.getText().trim().length() == 0 ){
            stateError.setText("Please Enter your state.");
        }
        else if ( zipField.getText().trim().length() == 0 ){
            zipError.setText("Please Enter your ZIP code.");
        }
        else if ( !phone.matches(phonePattern)  ){
            phoneError.setText("Please Enter a valid Phone Number.");
        }
        
        else {
        //Also while the button is activated the labels are updated with the following information.
        greetingLabel.setText("Hello "+ cust.getName() + "! Welcome to Famous Favorite Subs!");
        greetingLabel2.setText("Your order well be sent to "+cust.getAddress()+", in "+cust.getCity()+", "+cust.getState()+". "+cust.getZip()+".");
        greetingLabel3.setText("We'll call you at "+cust.getPhone()+" When the order is shipped.");
        
        //clear errors just in case the user goes back to view this page.
        nameError.setText("");
        addressError.setText("");
        cityError.setText("");
        stateError.setText("");
        zipError.setText("");
        phoneError.setText("");
        
        //for navigation purposes the final panel and customer panel are made invisible.
        customerPanel.setVisible(false);
        orderPanel.setVisible(true);
        }
    }//GEN-LAST:event_enterButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        customerPanel.setVisible(true);
        orderPanel.setVisible(false);
        //cancel button returns the user back to the beginning by making the customer panel visible.
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        //unlike the text boxes I had to use .getSelectedItem() to get the selected item from the drop down menu.
        //Compared to the last time I changed them all from objects to strings.
        String beverage = (String) beverageBox.getSelectedItem();
        String bread = (String) breadBox.getSelectedItem();
        String meatType = (String) typeBox.getSelectedItem();
        SandwichSize size = SandwichSize.valueOf((String) sizeBox.getSelectedItem());
        //changed sandwich size to an enum.
        
        Order ord = new Order(beverage, bread, meatType, size);
        
        orders.add(ord);
        //ord.add("Beverage: "+beverage+"\nBread: "+bread+"\nType: "+meatType+"\nSize: "+size+"\nPrice: $"+price);
        
        //A lambda that I could have used. Insetad I went with the For loop.
        //orders.forEach(o -> { 
        //    orderDetails.setText("Beverage: "+o.getBeverage()+"\nBread: "+o.getBread()+"\nType: "+o.getMeatType()+"\nSize: "+o.getSize()+"\nPrice: $");
        //});
        
        //resets the text every time the submit button has been action performed.
        orderDetails.setText("Your Order:\n\n");
        finalTextArea.setText("Your Order includes the following.\n\n");
        
        for (int i = 0; i < orders.size(); i++) {
            
            Order o = orders.get(i);//this gets the order at i. Since it is a loop it will continue to iterate till it hits the orders.size
            //My template for the text.
            //orderDetails.append("Beverage: "+o.getBeverage()+"\nBread: "+o.getBread()+"\nType: "+o.getMeatType()+"\nSize: "+o.getSize()+"\nPrice: "+checkPrice(ord)+"\n\n");
            
            ;//updates the text box with the order information.
            orderDetails.append(String.format("Beverage: %s\nBread: %s\nType: %s\nSize: %s\nPrice: %d\n\n",o.getBeverage(),o.getBread(),o.getMeatType(),o.getSize(),checkPrice(o)));
            //updates the final confirmation text box.
            finalTextArea.append(String.format("Beverage: %s\nBread: %s\nType: %s\nSize: %s\nPrice: %d\n\n",o.getBeverage(),o.getBread(),o.getMeatType(),o.getSize(),checkPrice(o)));
        }
        
        
        
        //orderDetails.setText("Your Order \n\n"+orderList);
        
        //finalTextArea.setText("Your order of a "+meatType+" sandwich on "+bread+" bread will come with a "+beverage+" and cost you $"+price+".\n\n");
    }//GEN-LAST:event_submitButtonActionPerformed

    private int checkPrice(Order ord) {//a switch that takes the case and returns values depending on the enum given. 
        switch (ord.getSize()){
            case Small:
                return 3;
                
            case Medium:
                return 4;
       
            case Large:
                return 5;
               
            case Extra_Large:
                return 6;
             
            default://there must be a default.
                return -1;
        }
    }
    
    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        customerPanel.setVisible(true);
        finalPanel.setVisible(false);
        orderPanel.setVisible(false);
        //navigation allowing the user to return to the beginning.
        
        //clears out the order when you return.
        orderDetails.setText("Your Order:\n\n");
        orders.clear();
    }//GEN-LAST:event_returnButtonActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        System.exit(0);
        //fancy exit button. For when you don't want to click X.
    }//GEN-LAST:event_quitButtonActionPerformed

    private void placeOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeOrderButtonActionPerformed
        
        //If statement checking to see if the Vector holding the order has anything in it. If not it will not let the customer continue.
        if (orders.size() <= 0) {
            orderDetails.setText("We're sorry but you cannot continue without\nAdding an item to your order.");
        }
        
        else {
        //Instead of adding text which will erase what is there, this .append will add onto the address portion to the final box.
        finalTextArea.append("It will be sent to the following address.\n"+cust.getAddress()+"\n"+cust.getCity()+", "+cust.getState()+"\n"+cust.getZip()+"\nAnd you will contacted with the following phone number.\n"+cust.getPhone());
        
        //Takes the entire order printed from the finalTextArea and saves it to a .txt file with the customers name and phone number as the name.
        try (PrintWriter reciept = new PrintWriter(cust.name+"_"+cust.getPhone()+"_SubOrder.txt")){
            reciept.println(finalTextArea.getText());
        }
        catch(Exception e){
            
        }
        //Set the final text area to the current file name_phone_SubOrder.txt
        try {
            FileReader reader = new FileReader(cust.name+"_"+cust.getPhone()+"_SubOrder.txt");
            BufferedReader buffRead = new BufferedReader(reader);
            finalTextArea.read( buffRead, null );
            buffRead.close();
        }
        catch(Exception e){
            
        }
        
        //more navigation.
        customerPanel.setVisible(false);
        finalPanel.setVisible(true);
        orderPanel.setVisible(false);
        }
    }//GEN-LAST:event_placeOrderButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        //clears the text in the box and clears the vector.
        orderDetails.setText("Your Order:\n\n");
        orders.clear();
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FamousSubs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FamousSubs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FamousSubs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FamousSubs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FamousSubs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressError;
    private javax.swing.JTextField addressField;
    private javax.swing.JLabel addressFieldLabel;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JComboBox beverageBox;
    private javax.swing.JLabel beverageLabel;
    private javax.swing.JComboBox breadBox;
    private javax.swing.JLabel breadLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel cityError;
    private javax.swing.JTextField cityField;
    private javax.swing.JLabel cityFieldLabel;
    private javax.swing.JButton clearButton;
    private javax.swing.JPanel customerPanel;
    private javax.swing.JButton enterButton;
    private javax.swing.JPanel finalPanel;
    private javax.swing.JScrollPane finalScrollPane;
    private javax.swing.JTextArea finalTextArea;
    private javax.swing.JLabel greetingLabel;
    private javax.swing.JLabel greetingLabel2;
    private javax.swing.JLabel greetingLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLabel nameError;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextArea orderDetails;
    private javax.swing.JScrollPane orderDetailsScroll;
    private javax.swing.JPanel orderPanel;
    private javax.swing.JLabel phoneError;
    private javax.swing.JTextField phoneField;
    private javax.swing.JLabel phoneFieldLabel;
    private javax.swing.JButton placeOrderButton;
    private javax.swing.JLabel plsSelectLabel;
    private javax.swing.JButton quitButton;
    private javax.swing.JButton returnButton;
    private javax.swing.JComboBox sizeBox;
    private javax.swing.JLabel sizeLabel;
    private javax.swing.JLabel stateError;
    private javax.swing.JTextField stateField;
    private javax.swing.JLabel stateFieldLabel;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel thankyouLabel;
    private javax.swing.JComboBox typeBox;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JLabel zipError;
    private javax.swing.JTextField zipField;
    private javax.swing.JLabel zipFieldLabel;
    // End of variables declaration//GEN-END:variables
}
